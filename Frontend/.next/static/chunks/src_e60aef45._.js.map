{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Ear%20Sokchan/Documents/yy_la_online_shop/client/Frontend/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\";\nimport { twMerge } from \"tailwind-merge\";\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS;IAAG,IAAA,IAAA,OAAA,UAAA,QAAA,AAAG,SAAH,UAAA,OAAA,OAAA,GAAA,OAAA,MAAA;QAAG,OAAH,QAAA,SAAA,CAAA,KAAuB;;IACxC,OAAO,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,wIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 29, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Ear%20Sokchan/Documents/yy_la_online_shop/client/Frontend/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-xl border bg-card text-card-foreground shadow\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"font-semibold leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,6JAAA,CAAA,aAAgB,MAG3B,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,yDACA;QAED,GAAG,KAAK;;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,6JAAA,CAAA,aAAgB,OAGjC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,6JAAA,CAAA,aAAgB,OAGhC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,6CAA6C;QAC1D,GAAG,KAAK;;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,6JAAA,CAAA,aAAgB,OAGtC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,6JAAA,CAAA,aAAgB,OAGlC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,6JAAA,CAAA,aAAgB,QAGjC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 150, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Ear%20Sokchan/Documents/yy_la_online_shop/client/Frontend/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground shadow-sm hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background shadow-sm hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-sm hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2\",\n        sm: \"h-8 rounded-md px-3 text-xs\",\n        lg: \"h-10 rounded-md px-8\",\n        icon: \"h-9 w-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AAEA;;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACvB,ySACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,6JAAA,CAAA,aAAgB,MAC7B,QAA0D;QAAzD,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO;IACtD,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 218, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Ear%20Sokchan/Documents/yy_la_online_shop/client/Frontend/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-md border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground shadow hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground shadow hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB,wKACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,KAA4C;QAA5C,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB,GAA5C;IACb,qBACE,6LAAC;QAAI,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE;KAJS","debugId":null}},
    {"offset": {"line": 267, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Ear%20Sokchan/Documents/yy_la_online_shop/client/Frontend/src/lib/cart-store.ts"],"sourcesContent":["import { create } from 'zustand';\r\n\r\ninterface CartItem {\r\n  id: string;\r\n  name: string;\r\n  salePrice: number | null;\r\n  riels: string;\r\n  image: string;\r\n  badges: string[];\r\n  size: string;\r\n  quantity: number;\r\n}\r\n\r\ninterface CartState {\r\n  items: CartItem[];\r\n  addItem: (item: Omit<CartItem, 'quantity'>) => void;\r\n  updateQuantity: (id: string, quantity: number, size: string) => void;\r\n  removeItem: (id: string, size: string) => void;\r\n  clearCart: () => void;\r\n  getTotalPrice: () => number;\r\n  getTotalItems: () => number;\r\n}\r\n\r\nexport const useCartStore = create<CartState>((set, get) => ({\r\n  items: [],\r\n  addItem: (item) => {\r\n    set((state) => {\r\n      const existingItem = state.items.find(\r\n        (i) => i.id === item.id && i.size === item.size\r\n      );\r\n      if (existingItem) {\r\n        return {\r\n          items: state.items.map((i) =>\r\n            i.id === item.id && i.size === item.size\r\n              ? { ...i, quantity: i.quantity + 1 }\r\n              : i\r\n          ),\r\n        };\r\n      }\r\n      return { items: [...state.items, { ...item, quantity: 1 }] };\r\n    });\r\n  },\r\n  updateQuantity: (id, quantity, size) => {\r\n    set((state) => ({\r\n      items: state.items\r\n        .map((item) =>\r\n          item.id === id && item.size === size\r\n            ? { ...item, quantity }\r\n            : item\r\n        )\r\n        .filter((item) => item.quantity > 0),\r\n    }));\r\n  },\r\n  removeItem: (id, size) => {\r\n    set((state) => ({\r\n      items: state.items.filter((item) => !(item.id === id && item.size === size)),\r\n    }));\r\n  },\r\n  clearCart: () => set({ items: [] }),\r\n  getTotalPrice: () =>\r\n    get().items.reduce(\r\n      (total, item) => total + (item.salePrice || 0) * item.quantity,\r\n      0\r\n    ),\r\n  getTotalItems: () =>\r\n    get().items.reduce((total, item) => total + item.quantity, 0),\r\n}));"],"names":[],"mappings":";;;AAAA;;AAuBO,MAAM,eAAe,CAAA,GAAA,2IAAA,CAAA,SAAM,AAAD,EAAa,CAAC,KAAK,MAAQ,CAAC;QAC3D,OAAO,EAAE;QACT,SAAS,CAAC;YACR,IAAI,CAAC;gBACH,MAAM,eAAe,MAAM,KAAK,CAAC,IAAI,CACnC,CAAC,IAAM,EAAE,EAAE,KAAK,KAAK,EAAE,IAAI,EAAE,IAAI,KAAK,KAAK,IAAI;gBAEjD,IAAI,cAAc;oBAChB,OAAO;wBACL,OAAO,MAAM,KAAK,CAAC,GAAG,CAAC,CAAC,IACtB,EAAE,EAAE,KAAK,KAAK,EAAE,IAAI,EAAE,IAAI,KAAK,KAAK,IAAI,GACpC;gCAAE,GAAG,CAAC;gCAAE,UAAU,EAAE,QAAQ,GAAG;4BAAE,IACjC;oBAER;gBACF;gBACA,OAAO;oBAAE,OAAO;2BAAI,MAAM,KAAK;wBAAE;4BAAE,GAAG,IAAI;4BAAE,UAAU;wBAAE;qBAAE;gBAAC;YAC7D;QACF;QACA,gBAAgB,CAAC,IAAI,UAAU;YAC7B,IAAI,CAAC,QAAU,CAAC;oBACd,OAAO,MAAM,KAAK,CACf,GAAG,CAAC,CAAC,OACJ,KAAK,EAAE,KAAK,MAAM,KAAK,IAAI,KAAK,OAC5B;4BAAE,GAAG,IAAI;4BAAE;wBAAS,IACpB,MAEL,MAAM,CAAC,CAAC,OAAS,KAAK,QAAQ,GAAG;gBACtC,CAAC;QACH;QACA,YAAY,CAAC,IAAI;YACf,IAAI,CAAC,QAAU,CAAC;oBACd,OAAO,MAAM,KAAK,CAAC,MAAM,CAAC,CAAC,OAAS,CAAC,CAAC,KAAK,EAAE,KAAK,MAAM,KAAK,IAAI,KAAK,IAAI;gBAC5E,CAAC;QACH;QACA,WAAW,IAAM,IAAI;gBAAE,OAAO,EAAE;YAAC;QACjC,eAAe,IACb,MAAM,KAAK,CAAC,MAAM,CAChB,CAAC,OAAO,OAAS,QAAQ,CAAC,KAAK,SAAS,IAAI,CAAC,IAAI,KAAK,QAAQ,EAC9D;QAEJ,eAAe,IACb,MAAM,KAAK,CAAC,MAAM,CAAC,CAAC,OAAO,OAAS,QAAQ,KAAK,QAAQ,EAAE;IAC/D,CAAC","debugId":null}},
    {"offset": {"line": 324, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Ear%20Sokchan/Documents/yy_la_online_shop/client/Frontend/src/app/cart/page.tsx"],"sourcesContent":["// \"use client\";\r\n\r\n// import React, { useState } from 'react';\r\n// import { Card, CardHeader, CardTitle, CardContent } from '@/components/ui/card';\r\n// import { Button } from '@/components/ui/button';\r\n// import { Input } from '@/components/ui/input';\r\n// import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\r\n// import { Badge } from '@/components/ui/badge';\r\n// import { ArrowLeft, Minus, Plus, Trash2, ShoppingCart } from 'lucide-react';\r\n// import Link from 'next/link';\r\n// import { useCartStore } from '@/lib/cart-store';\r\n\r\n// interface Toast {\r\n//   id: number;\r\n//   message: string;\r\n// }\r\n\r\n// export default function CartPage() {\r\n//   const { items, updateQuantity, removeItem, clearCart, getTotalPrice, getTotalItems } = useCartStore();\r\n//   const [toasts, setToasts] = useState<Toast[]>([]);\r\n//   const [isCheckout, setIsCheckout] = useState(false);\r\n//   const [formData, setFormData] = useState({\r\n//     name: '',\r\n//     email: '',\r\n//     phone: '',\r\n//     address: '',\r\n//     province: '',\r\n//   });\r\n//   const [errors, setErrors] = useState({ name: '', email: '', phone: '', address: '', province: '' });\r\n\r\n//   const provinces = [\r\n//     'Banteay Meanchey',\r\n//     'Battambang',\r\n//     'Kampong Cham',\r\n//     'Kampong Chhnang',\r\n//     'Kampong Speu',\r\n//     'Kampong Thom',\r\n//     'Kampot',\r\n//     'Kandal',\r\n//     'Kep',\r\n//     'Koh Kong',\r\n//     'Kratié',\r\n//     'Mondulkiri',\r\n//     'Oddar Meanchey',\r\n//     'Pailin',\r\n//     'Phnom Penh',\r\n//     'Preah Sihanouk',\r\n//     'Preah Vihear',\r\n//     'Prey Veng',\r\n//     'Pursat',\r\n//     'Ratanakiri',\r\n//     'Siem Reap',\r\n//     'Stung Treng',\r\n//     'Svay Rieng',\r\n//     'Takéo',\r\n//     'Tboung Khmum'\r\n//   ];\r\n\r\n//   // Add toast notification\r\n//   const showToast = (message: string) => {\r\n//     const id = Date.now();\r\n//     setToasts((prev) => [...prev, { id, message }]);\r\n//     setTimeout(() => {\r\n//       setToasts((prev) => prev.filter((toast) => toast.id !== id));\r\n//     }, 3000);\r\n//   };\r\n\r\n//   // Handle checkout click\r\n//   const handleCheckout = () => {\r\n//     setIsCheckout(true);\r\n//   };\r\n\r\n//   // Handle form input changes\r\n//   const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n//     const { name, value } = e.target;\r\n//     setFormData((prev) => ({ ...prev, [name]: value }));\r\n//     setErrors((prev) => ({ ...prev, [name]: '' }));\r\n//   };\r\n\r\n//   // Handle province selection\r\n//   const handleProvinceChange = (value: string) => {\r\n//     setFormData((prev) => ({ ...prev, province: value }));\r\n//     setErrors((prev) => ({ ...prev, province: '' }));\r\n//   };\r\n\r\n//   // Validate checkout form\r\n//   const validateForm = () => {\r\n//     let isValid = true;\r\n//     const newErrors = { name: '', email: '', phone: '', address: '', province: '' };\r\n\r\n//     if (!formData.name.trim()) {\r\n//       newErrors.name = 'Name is required';\r\n//       isValid = false;\r\n//     }\r\n//     if (!formData.email.match(/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/)) {\r\n//       newErrors.email = 'Valid email is required';\r\n//       isValid = false;\r\n//     }\r\n//     if (!formData.phone.match(/^\\+?\\d{10,15}$/)) {\r\n//       newErrors.phone = 'Valid phone number is required';\r\n//       isValid = false;\r\n//     }\r\n//     if (!formData.address.trim()) {\r\n//       newErrors.address = 'Address is required';\r\n//       isValid = false;\r\n//     }\r\n//     if (!formData.province) {\r\n//       newErrors.province = 'Province is required';\r\n//       isValid = false;\r\n//     }\r\n\r\n//     setErrors(newErrors);\r\n//     return isValid;\r\n//   };\r\n\r\n//   // Handle order submission\r\n//   const handleSubmit = async (e: React.FormEvent) => {\r\n//     e.preventDefault();\r\n//     if (validateForm()) {\r\n//       try {\r\n//         const orderData = {\r\n//           customerName: formData.name,\r\n//           email: formData.email,\r\n//           phoneNumber: formData.phone,\r\n//           deliveryAddress: formData.address,\r\n//           province: formData.province,\r\n//           items: items.map(item => ({\r\n//             productId: item.id,\r\n//             productName: item.name,\r\n//             imageUrl: item.image,\r\n//             price: item.salePrice || 0,\r\n//             quantity: item.quantity,\r\n//             size: item.size || '',\r\n//             badges: item.badges || []\r\n//           })),\r\n//           subtotal: getTotalPrice(),\r\n//           deliveryFee: 2.00,\r\n//           total: getTotalPrice() + 2.00\r\n//         };\r\n\r\n//         const response = await fetch('https://graph-controller-admissions-picks.trycloudflare.com/api/orders', {\r\n//           method: 'POST',\r\n//           headers: {\r\n//             'Content-Type': 'application/json',\r\n//           },\r\n//           body: JSON.stringify(orderData),\r\n//         });\r\n\r\n//         if (response.ok) {\r\n//           const result = await response.json();\r\n//           showToast('Order placed successfully!');\r\n//           clearCart();\r\n//           // Redirect to confirmation page or home\r\n//           setTimeout(() => {\r\n//             window.location.href = '/';\r\n//           }, 2000);\r\n//         } else {\r\n//           const errorData = await response.json();\r\n//           showToast(`Failed to place order: ${errorData.error}`);\r\n//         }\r\n//       } catch (error) {\r\n//         console.error('Error submitting order:', error);\r\n//         showToast('Network error. Please check your connection.');\r\n//       }\r\n//     }\r\n//   };\r\n\r\n//   if (items.length === 0) {\r\n//     return (\r\n//       <div className=\"min-h-screen bg-gray-50\">\r\n//         {/* Header */}\r\n//         <header className=\"bg-black text-white px-4 py-4\">\r\n//           <div className=\"max-w-7xl mx-auto flex items-center justify-between\">\r\n//             <Link href=\"/\" className=\"flex items-center gap-2 sm:gap-4\">\r\n//               <ArrowLeft className=\"w-5 h-5 sm:w-6 sm:h-6\" />\r\n//               <div className=\"flex items-center gap-2 sm:gap-4\">\r\n//                 <div className=\"w-6 h-6 sm:w-8 sm:h-8 bg-white rounded-full\" />\r\n//                 <h1 className=\"text-xl sm:text-2xl font-bold text-amber-500\">Pisey Salon</h1>\r\n//               </div>\r\n//             </Link>\r\n//             <div className=\"flex items-center gap-2\">\r\n//               <ShoppingCart className=\"w-5 h-5 sm:w-6 sm:h-6\" />\r\n//               <span className=\"text-base sm:text-lg font-semibold\">{isCheckout ? 'Checkout' : 'Your Cart'}</span>\r\n//             </div>\r\n//           </div>\r\n//         </header>\r\n\r\n//         {/* Empty Cart */}\r\n//         <main className=\"max-w-7xl mx-auto px-4 py-12 sm:py-16 text-center\">\r\n//           <div className=\"bg-white rounded-lg p-8 sm:p-12 shadow-sm\">\r\n//             <ShoppingCart className=\"w-16 h-16 sm:w-24 sm:h-24 text-gray-300 mx-auto mb-6\" />\r\n//             <h2 className=\"text-xl sm:text-2xl font-bold text-gray-800 mb-4\">Your cart is empty</h2>\r\n//             <p className=\"text-gray-600 mb-6 sm:mb-8 text-sm sm:text-base\">\r\n//               Add some delicious items from our menu to get started!\r\n//             </p>\r\n//             <Link href=\"/\">\r\n//               <Button className=\"bg-amber-600 hover:bg-amber-700 text-white px-6 py-2 sm:px-8 sm:py-3 text-sm sm:text-base\">\r\n//                 Browse Menu\r\n//               </Button>\r\n//             </Link>\r\n//           </div>\r\n//         </main>\r\n//       </div>\r\n//     );\r\n//   }\r\n\r\n//   return (\r\n//     <div className=\"min-h-screen bg-gray-50\">\r\n//       {/* Header */}\r\n//       <header className=\"bg-black text-white px-4 py-4\">\r\n//         <div className=\"max-w-7xl mx-auto flex items-center justify-between\">\r\n//           <Link href=\"/\" className=\"flex items-center gap-2 sm:gap-4\">\r\n//             <ArrowLeft className=\"w-5 h-5 sm:w-6 sm:h-6\" />\r\n//             <div className=\"flex items-center gap-2 sm:gap-4\">\r\n//               <div className=\"w-6 h-6 sm:w-8 sm:h-8 bg-white rounded-full\" />\r\n//               <h1 className=\"text-xl sm:text-2xl font-bold text-amber-500\">Pisey Salon</h1>\r\n//             </div>\r\n//           </Link>\r\n//           <div className=\"flex items-center gap-2\">\r\n//             <ShoppingCart className=\"w-5 h-5 sm:w-6 sm:h-6\" />\r\n//             <span className=\"text-base sm:text-lg font-semibold\">\r\n//               {isCheckout ? `Checkout (${getTotalItems()} ${getTotalItems() === 1 ? 'item' : 'items'})` : `Your Cart (${getTotalItems()} ${getTotalItems() === 1 ? 'item' : 'items'})`}\r\n//             </span>\r\n//           </div>\r\n//         </div>\r\n//       </header>\r\n\r\n//       <main className=\"max-w-7xl mx-auto px-4 py-8 sm:py-12\">\r\n//         <div className=\"fixed top-4 right-4 z-50\">\r\n//           {toasts.map((toast) => (\r\n//             <div\r\n//               key={toast.id}\r\n//               className=\"mb-2 bg-amber-500 text-white px-4 py-2 rounded shadow-lg animate-slide-in\"\r\n//             >\r\n//               {toast.message}\r\n//             </div>\r\n//           ))}\r\n//         </div>\r\n\r\n//         <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\r\n//           {isCheckout ? (\r\n//             // Checkout Section\r\n//             <div className=\"lg:col-span-2 space-y-6\">\r\n//               <Card className=\"shadow-sm\">\r\n//                 <CardHeader>\r\n//                   <CardTitle className=\"text-lg sm:text-xl text-gray-800\">Customer Information</CardTitle>\r\n//                 </CardHeader>\r\n//                 <CardContent>\r\n//                   <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n//                     <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-4\">\r\n//                       <div>\r\n//                         <label htmlFor=\"name\" className=\"text-sm sm:text-base text-gray-800\">Full Name</label>\r\n//                         <Input\r\n//                           id=\"name\"\r\n//                           name=\"name\"\r\n//                           value={formData.name}\r\n//                           onChange={handleInputChange}\r\n//                           className=\"mt-1\"\r\n//                           aria-invalid={!!errors.name}\r\n//                           aria-describedby={errors.name ? 'name-error' : undefined}\r\n//                         />\r\n//                         {errors.name && (\r\n//                           <p id=\"name-error\" className=\"text-red-600 text-xs mt-1\">{errors.name}</p>\r\n//                         )}\r\n//                       </div>\r\n//                       <div>\r\n//                         <label htmlFor=\"email\" className=\"text-sm sm:text-base text-gray-800\">Email</label>\r\n//                         <Input\r\n//                           id=\"email\"\r\n//                           name=\"email\"\r\n//                           type=\"email\"\r\n//                           value={formData.email}\r\n//                           onChange={handleInputChange}\r\n//                           className=\"mt-1\"\r\n//                           aria-invalid={!!errors.email}\r\n//                           aria-describedby={errors.email ? 'email-error' : undefined}\r\n//                         />\r\n//                         {errors.email && (\r\n//                           <p id=\"email-error\" className=\"text-red-600 text-xs mt-1\">{errors.email}</p>\r\n//                         )}\r\n//                       </div>\r\n//                     </div>\r\n//                     <div>\r\n//                       <label htmlFor=\"phone\" className=\"text-sm sm:text-base text-gray-800\">Phone Number</label>\r\n//                       <Input\r\n//                         id=\"phone\"\r\n//                         name=\"phone\"\r\n//                         type=\"tel\"\r\n//                         value={formData.phone}\r\n//                         onChange={handleInputChange}\r\n//                         className=\"mt-1\"\r\n//                         aria-invalid={!!errors.phone}\r\n//                         aria-describedby={errors.phone ? 'phone-error' : undefined}\r\n//                       />\r\n//                       {errors.phone && (\r\n//                         <p id=\"phone-error\" className=\"text-red-600 text-xs mt-1\">{errors.phone}</p>\r\n//                       )}\r\n//                     </div>\r\n//                     <div>\r\n//                       <label htmlFor=\"address\" className=\"text-sm sm:text-base text-gray-800\">Delivery Address</label>\r\n//                       <Input\r\n//                         id=\"address\"\r\n//                         name=\"address\"\r\n//                         value={formData.address}\r\n//                         onChange={handleInputChange}\r\n//                         className=\"mt-1\"\r\n//                         aria-invalid={!!errors.address}\r\n//                         aria-describedby={errors.address ? 'address-error' : undefined}\r\n//                       />\r\n//                       {errors.address && (\r\n//                         <p id=\"address-error\" className=\"text-red-600 text-xs mt-1\">{errors.address}</p>\r\n//                       )}\r\n//                     </div>\r\n//                     <div>\r\n//                       <label htmlFor=\"province\" className=\"text-sm sm:text-base text-gray-800\">Province</label>\r\n//                       <Select\r\n//                         name=\"province\"\r\n//                         value={formData.province}\r\n//                         onValueChange={handleProvinceChange}\r\n//                         aria-invalid={!!errors.province}\r\n//                         aria-describedby={errors.province ? 'province-error' : undefined}\r\n//                       >\r\n//                         <SelectTrigger className=\"mt-1\">\r\n//                           <SelectValue placeholder=\"Select a province\" />\r\n//                         </SelectTrigger>\r\n//                         <SelectContent className=\"max-h-60 overflow-y-auto\">\r\n//                           {provinces.map((province) => (\r\n//                             <SelectItem key={province} value={province}>\r\n//                               {province}\r\n//                             </SelectItem>\r\n//                           ))}\r\n//                         </SelectContent>\r\n//                       </Select>\r\n//                       {errors.province && (\r\n//                         <p id=\"province-error\" className=\"text-red-600 text-xs mt-1\">{errors.province}</p>\r\n//                       )}\r\n//                     </div>\r\n//                   </form>\r\n//                 </CardContent>\r\n//               </Card>\r\n//             </div>\r\n//           ) : (\r\n//             // Cart Section\r\n//             <div className=\"lg:col-span-2 space-y-4\">\r\n//               <div className=\"flex items-center justify-between mb-4 sm:mb-6\">\r\n//                 <h2 className=\"text-xl sm:text-2xl font-bold text-gray-800\">Cart Items</h2>\r\n//                 <Button\r\n//                   variant=\"outline\"\r\n//                   onClick={clearCart}\r\n//                   className=\"text-red-600 border-red-200 hover:bg-red-50 text-sm sm:text-base\"\r\n//                   aria-label=\"Clear cart\"\r\n//                 >\r\n//                   <Trash2 className=\"w-4 h-4 mr-2\" />\r\n//                   Clear Cart\r\n//                 </Button>\r\n//               </div>\r\n\r\n//               {items.map((item) => (\r\n//                 <Card\r\n//                   key={`${item.id}-${item.size}-${Date.now()}`}\r\n//                   className=\"overflow-hidden shadow-sm\"\r\n//                 >\r\n//                   <CardContent className=\"p-4 sm:p-6\">\r\n//                     <div className=\"flex flex-col sm:flex-row gap-4\">\r\n//                       <img\r\n//                         src={item.image}\r\n//                         alt={item.name}\r\n//                         className=\"w-20 h-20 sm:w-24 sm:h-24 object-cover rounded-lg flex-shrink-0\"\r\n//                         loading=\"lazy\"\r\n//                       />\r\n\r\n//                       <div className=\"flex-1 space-y-2\">\r\n//                         <div className=\"flex flex-col sm:flex-row justify-between items-start gap-2\">\r\n//                           <div>\r\n//                             <h3 className=\"font-bold text-gray-800 text-base sm:text-lg\">{item.name}</h3>\r\n//                             <p className=\"text-xs sm:text-sm text-gray-500\">ID: {item.id}</p>\r\n//                             {item.badges?.length > 0 && (\r\n//                               <div className=\"flex flex-wrap gap-1 mt-2\">\r\n//                                 {item.badges.map((badge, index) => (\r\n//                                   <Badge\r\n//                                     key={index}\r\n//                                     className={`text-xs ${\r\n//                                       badge.includes('%') ? 'bg-amber-500' :\r\n//                                       badge === 'Popular' ? 'bg-amber-600' :\r\n//                                       badge === 'Recommended' ? 'bg-amber-700' :\r\n//                                       badge === 'Special' ? 'bg-green-600' :\r\n//                                       badge === 'Vegan' ? 'bg-green-500' :\r\n//                                       'bg-gray-600'\r\n//                                     } text-white`}\r\n//                                   >\r\n//                                     {badge}\r\n//                                   </Badge>\r\n//                                 ))}\r\n//                               </div>\r\n//                             )}\r\n//                           </div>\r\n//                           <Button\r\n//                             variant=\"ghost\"\r\n//                             size=\"sm\"\r\n//                             onClick={() => removeItem(item.id, item.size)}\r\n//                             className=\"text-red-600 hover:text-red-800 hover:bg-red-50\"\r\n//                             aria-label={`Remove ${item.name} from cart`}\r\n//                           >\r\n//                             <Trash2 className=\"w-4 h-4\" />\r\n//                           </Button>\r\n//                         </div>\r\n\r\n//                         <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between gap-3\">\r\n//                           <div className=\"flex items-center gap-2\">\r\n//                             <span className=\"text-lg sm:text-xl font-bold text-amber-600\">\r\n//                               {item.salePrice ? `$${item.salePrice.toFixed(2)}` : '$0.00'}\r\n//                             </span>\r\n//                             <span className=\"text-xs sm:text-sm text-gray-500\">({item.riels})</span>\r\n//                           </div>\r\n\r\n//                           <div className=\"flex items-center gap-2 sm:gap-3\">\r\n//                             <Button\r\n//                               variant=\"outline\"\r\n//                               size=\"sm\"\r\n//                               onClick={() => updateQuantity(item.id, Math.max(0, item.quantity - 1), item.size)}\r\n//                               className=\"w-8 h-8 p-0\"\r\n//                               aria-label={`Decrease quantity of ${item.name}`}\r\n//                             >\r\n//                               <Minus className=\"w-4 h-4\" />\r\n//                             </Button>\r\n//                             <span className=\"font-semibold text-base sm:text-lg min-w-[2rem] text-center\">\r\n//                               {item.quantity}\r\n//                             </span>\r\n//                             <Button\r\n//                               variant=\"outline\"\r\n//                               size=\"sm\"\r\n//                               onClick={() => updateQuantity(item.id, item.quantity + 1, item.size)}\r\n//                               className=\"w-8 h-8 p-0\"\r\n//                               aria-label={`Increase quantity of ${item.name}`}\r\n//                             >\r\n//                               <Plus className=\"w-4 h-4\" />\r\n//                             </Button>\r\n//                           </div>\r\n//                         </div>\r\n\r\n//                         <div className=\"text-right mt-2\">\r\n//                           <span className=\"text-base sm:text-lg font-semibold text-gray-800\">\r\n//                             Subtotal: ${((item.salePrice || 0) * item.quantity).toFixed(2)}\r\n//                           </span>\r\n//                         </div>\r\n//                       </div>\r\n//                     </div>\r\n//                   </CardContent>\r\n//                 </Card>\r\n//               ))}\r\n//             </div>\r\n//           )}\r\n\r\n//           {/* Order Summary */}\r\n//           <div className=\"lg:col-span-1\">\r\n//             <Card className=\"sticky top-4 shadow-sm\">\r\n//               <CardHeader>\r\n//                 <CardTitle className=\"text-lg sm:text-xl text-gray-800\">Order Summary</CardTitle>\r\n//               </CardHeader>\r\n//               <CardContent className=\"space-y-4\">\r\n//                 {isCheckout && (\r\n//                   <div className=\"space-y-2\">\r\n//                     {items.map((item) => (\r\n//                       <div key={`${item.id}-${item.size}`} className=\"flex justify-between text-sm sm:text-base\">\r\n//                         <span>\r\n//                           {item.name} ({item.quantity} x ${item.salePrice?.toFixed(2) || '0.00'})\r\n//                         </span>\r\n//                         <span>${((item.salePrice || 0) * item.quantity).toFixed(2)}</span>\r\n//                       </div>\r\n//                     ))}\r\n//                     <hr className=\"border-gray-200\" />\r\n//                   </div>\r\n//                 )}\r\n//                 <div className=\"flex justify-between text-sm sm:text-base\">\r\n//                   <span>Subtotal ({getTotalItems()} {getTotalItems() === 1 ? 'item' : 'items'})</span>\r\n//                   <span>${getTotalPrice().toFixed(2)}</span>\r\n//                 </div>\r\n//                 <div className=\"flex justify-between text-sm sm:text-base\">\r\n//                   <span>Delivery Fee</span>\r\n//                   <span>$2.00</span>\r\n//                 </div>\r\n//                 <hr className=\"border-gray-200\" />\r\n//                 <div className=\"flex justify-between text-base sm:text-lg font-bold\">\r\n//                   <span>Total</span>\r\n//                   <span>${(getTotalPrice() + 2).toFixed(2)}</span>\r\n//                 </div>\r\n\r\n//                 {isCheckout ? (\r\n//                   <>\r\n//                     <Button\r\n//                       onClick={handleSubmit}\r\n//                       className=\"w-full bg-amber-600 hover:bg-amber-700 text-white py-2 sm:py-3 text-sm sm:text-lg font-semibold mt-6\"\r\n//                       disabled={items.length === 0}\r\n//                     >\r\n//                       Place Order\r\n//                     </Button>\r\n//                     <Button\r\n//                       variant=\"outline\"\r\n//                       className=\"w-full mt-3 text-sm sm:text-base\"\r\n//                       onClick={() => setIsCheckout(false)}\r\n//                     >\r\n//                       Back to Cart\r\n//                     </Button>\r\n//                   </>\r\n//                 ) : (\r\n//                   <>\r\n//                     <Button\r\n//                       className=\"w-full bg-amber-600 hover:bg-amber-700 text-white py-2 sm:py-3 text-sm sm:text-lg font-semibold mt-6\"\r\n//                       onClick={handleCheckout}\r\n//                     >\r\n//                       Proceed to Checkout\r\n//                     </Button>\r\n//                     <Button\r\n//                       variant=\"outline\"\r\n//                       className=\"w-full mt-3 text-sm sm:text-base\"\r\n//                       asChild\r\n//                     >\r\n//                       <Link href=\"/\">Continue Shopping</Link>\r\n//                     </Button>\r\n//                   </>\r\n//                 )}\r\n//               </CardContent>\r\n//             </Card>\r\n//           </div>\r\n//         </div>\r\n//       </main>\r\n\r\n//       <style jsx>{`\r\n//         @keyframes slide-in {\r\n//           from {\r\n//             transform: translateX(100%);\r\n//             opacity: 0;\r\n//           }\r\n//           to {\r\n//             transform: translateX(0);\r\n//             opacity: 1;\r\n//           }\r\n//         }\r\n//         .animate-slide-in {\r\n//           animation: slide-in 0.3s ease-out;\r\n//         }\r\n//       `}</style>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\"use client\";\r\n\r\nimport React, { useState } from \"react\";\r\nimport { Card, CardHeader, CardTitle, CardContent } from \"@/components/ui/card\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Badge } from \"@/components/ui/badge\";\r\nimport { ArrowLeft, Minus, Plus, Trash2, ShoppingCart } from \"lucide-react\";\r\nimport Link from \"next/link\";\r\nimport { useCartStore } from \"@/lib/cart-store\";\r\n\r\ninterface Toast {\r\n  id: number;\r\n  message: string;\r\n}\r\n\r\nexport default function CartPage() {\r\n  const {\r\n    items,\r\n    updateQuantity,\r\n    removeItem,\r\n    clearCart,\r\n    getTotalPrice,\r\n    getTotalItems,\r\n  } = useCartStore();\r\n  const [toasts, setToasts] = useState<Toast[]>([]);\r\n\r\n  // Toast notification\r\n  const showToast = (message: string) => {\r\n    const id = Date.now();\r\n    setToasts((prev) => [...prev, { id, message }]);\r\n    setTimeout(() => {\r\n      setToasts((prev) => prev.filter((toast) => toast.id !== id));\r\n    }, 3000);\r\n  };\r\n\r\n  // Handle \"Place Order\" -> Telegram\r\n  const handleSubmit = async () => {\r\n    try {\r\n      if (items.length === 0) {\r\n        showToast(\"Your cart is empty.\");\r\n        return;\r\n      }\r\n\r\n      // Format cart items without size\r\n      const cartText = items\r\n        .map(\r\n          (item, index) =>\r\n            `${index + 1}. ${item.name} (x${item.quantity}) - $${\r\n              item.salePrice ? item.salePrice.toFixed(2) : \"0.00\"\r\n            }%0AProduct: ${item.image}`\r\n        )\r\n        .join(\"%0A%0A\"); // blank line between items\r\n\r\n      const message = `🛒My Order:%0A%0A${cartText}%0A%0ATotal: $${(\r\n        getTotalPrice() + 2\r\n      ).toFixed(2)} (incl. $2 delivery)`;\r\n\r\n      // Open Telegram with pre-filled message\r\n      const telegramLink = `https://t.me/Pisey_salon?text=${message}`;\r\n      window.open(telegramLink, \"_blank\");\r\n\r\n      // Clear cart\r\n      clearCart();\r\n      showToast(\"Redirecting to Telegram...\");\r\n    } catch (error) {\r\n      console.error(\"Error opening Telegram:\", error);\r\n      showToast(\"Failed to open Telegram. Please try again.\");\r\n    }\r\n  };\r\n\r\n  if (items.length === 0) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gray-50\">\r\n        {/* Header */}\r\n        <header className=\"bg-black text-white px-4 py-4\">\r\n          <div className=\"max-w-7xl mx-auto flex items-center justify-between\">\r\n            <Link href=\"/\" className=\"flex items-center gap-2 sm:gap-4\">\r\n              <ArrowLeft className=\"w-5 h-5 sm:w-6 sm:h-6\" />\r\n              <div className=\"flex items-center gap-2 sm:gap-4\">\r\n                <div className=\"w-6 h-6 sm:w-8 sm:h-8 bg-white rounded-full\" />\r\n                <h1 className=\"text-xl sm:text-2xl font-bold text-amber-500\">\r\n                  Pisey Salon\r\n                </h1>\r\n              </div>\r\n            </Link>\r\n            <div className=\"flex items-center gap-2\">\r\n              <ShoppingCart className=\"w-5 h-5 sm:w-6 sm:h-6\" />\r\n              <span className=\"text-base sm:text-lg font-semibold\">\r\n                Your Cart\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </header>\r\n\r\n        {/* Empty Cart */}\r\n        <main className=\"max-w-7xl mx-auto px-4 py-12 sm:py-16 text-center\">\r\n          <div className=\"bg-white rounded-lg p-8 sm:p-12 shadow-sm\">\r\n            <ShoppingCart className=\"w-16 h-16 sm:w-24 sm:h-24 text-gray-300 mx-auto mb-6\" />\r\n            <h2 className=\"text-xl sm:text-2xl font-bold text-gray-800 mb-4\">\r\n              Your cart is empty\r\n            </h2>\r\n            <p className=\"text-gray-600 mb-6 sm:mb-8 text-sm sm:text-base\">\r\n              Add some delicious items from our menu to get started!\r\n            </p>\r\n            <Link href=\"/\">\r\n              <Button className=\"bg-amber-600 hover:bg-amber-700 text-white px-6 py-2 sm:px-8 sm:py-3 text-sm sm:text-base\">\r\n                Browse Menu\r\n              </Button>\r\n            </Link>\r\n          </div>\r\n        </main>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50\">\r\n      {/* Header */}\r\n      <header className=\"bg-black text-white px-4 py-4\">\r\n        <div className=\"max-w-7xl mx-auto flex items-center justify-between\">\r\n          <Link href=\"/\" className=\"flex items-center gap-2 sm:gap-4\">\r\n            <ArrowLeft className=\"w-5 h-5 sm:w-6 sm:h-6\" />\r\n            <div className=\"flex items-center gap-2 sm:gap-4\">\r\n              <div className=\"w-6 h-6 sm:w-8 sm:h-8 bg-white rounded-full\" />\r\n              <h1 className=\"text-xl sm:text-2xl font-bold text-amber-500\">\r\n                Pisey Salon\r\n              </h1>\r\n            </div>\r\n          </Link>\r\n          <div className=\"flex items-center gap-2\">\r\n            <ShoppingCart className=\"w-5 h-5 sm:w-6 sm:h-6\" />\r\n            <span className=\"text-base sm:text-lg font-semibold\">\r\n              Your Cart ({getTotalItems()}{\" \"}\r\n              {getTotalItems() === 1 ? \"item\" : \"items\"})\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </header>\r\n\r\n      <main className=\"max-w-7xl mx-auto px-4 py-8 sm:py-12\">\r\n        <div className=\"fixed top-4 right-4 z-50\">\r\n          {toasts.map((toast) => (\r\n            <div\r\n              key={toast.id}\r\n              className=\"mb-2 bg-amber-500 text-white px-4 py-2 rounded shadow-lg animate-slide-in\"\r\n            >\r\n              {toast.message}\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\r\n          {/* Cart Section */}\r\n          <div className=\"lg:col-span-2 space-y-4\">\r\n            <div className=\"flex items-center justify-between mb-4 sm:mb-6\">\r\n              <h2 className=\"text-xl sm:text-2xl font-bold text-gray-800\">\r\n                Cart Items\r\n              </h2>\r\n              <Button\r\n                variant=\"outline\"\r\n                onClick={clearCart}\r\n                className=\"text-red-600 border-red-200 hover:bg-red-50 text-sm sm:text-base\"\r\n                aria-label=\"Clear cart\"\r\n              >\r\n                <Trash2 className=\"w-4 h-4 mr-2\" />\r\n                Clear Cart\r\n              </Button>\r\n            </div>\r\n\r\n            {items.map((item) => (\r\n              <Card\r\n                key={`${item.id}-${item.size}-${Date.now()}`}\r\n                className=\"overflow-hidden shadow-sm\"\r\n              >\r\n                <CardContent className=\"p-4 sm:p-6\">\r\n                  <div className=\"flex flex-col sm:flex-row gap-4\">\r\n                    <img\r\n                      src={item.image}\r\n                      alt={item.name}\r\n                      className=\"w-20 h-20 sm:w-24 sm:h-24 object-cover rounded-lg flex-shrink-0\"\r\n                      loading=\"lazy\"\r\n                    />\r\n\r\n                    <div className=\"flex-1 space-y-2\">\r\n                      <div className=\"flex flex-col sm:flex-row justify-between items-start gap-2\">\r\n                        <div>\r\n                          <h3 className=\"font-bold text-gray-800 text-base sm:text-lg\">\r\n                            {item.name}\r\n                          </h3>\r\n                          <p className=\"text-xs sm:text-sm text-gray-500\">\r\n                            ID: {item.id}\r\n                          </p>\r\n                          {item.badges?.length > 0 && (\r\n                            <div className=\"flex flex-wrap gap-1 mt-2\">\r\n                              {item.badges.map((badge, index) => (\r\n                                <Badge\r\n                                  key={index}\r\n                                  className={`text-xs ${\r\n                                    badge.includes(\"%\")\r\n                                      ? \"bg-amber-500\"\r\n                                      : badge === \"Popular\"\r\n                                      ? \"bg-amber-600\"\r\n                                      : badge === \"Recommended\"\r\n                                      ? \"bg-amber-700\"\r\n                                      : badge === \"Special\"\r\n                                      ? \"bg-green-600\"\r\n                                      : badge === \"Vegan\"\r\n                                      ? \"bg-green-500\"\r\n                                      : \"bg-gray-600\"\r\n                                  } text-white`}\r\n                                >\r\n                                  {badge}\r\n                                </Badge>\r\n                              ))}\r\n                            </div>\r\n                          )}\r\n                        </div>\r\n                        <Button\r\n                          variant=\"ghost\"\r\n                          size=\"sm\"\r\n                          onClick={() => removeItem(item.id, item.size)}\r\n                          className=\"text-red-600 hover:text-red-800 hover:bg-red-50\"\r\n                          aria-label={`Remove ${item.name} from cart`}\r\n                        >\r\n                          <Trash2 className=\"w-4 h-4\" />\r\n                        </Button>\r\n                      </div>\r\n\r\n                      <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between gap-3\">\r\n                        <div className=\"flex items-center gap-2\">\r\n                          <span className=\"text-lg sm:text-xl font-bold text-amber-600\">\r\n                            {item.salePrice\r\n                              ? `$${item.salePrice.toFixed(2)}`\r\n                              : \"$0.00\"}\r\n                          </span>\r\n                          <span className=\"text-xs sm:text-sm text-gray-500\">\r\n                            ({item.riels})\r\n                          </span>\r\n                        </div>\r\n\r\n                        <div className=\"flex items-center gap-2 sm:gap-3\">\r\n                          <Button\r\n                            variant=\"outline\"\r\n                            size=\"sm\"\r\n                            onClick={() =>\r\n                              updateQuantity(\r\n                                item.id,\r\n                                Math.max(0, item.quantity - 1),\r\n                                item.size\r\n                              )\r\n                            }\r\n                            className=\"w-8 h-8 p-0\"\r\n                            aria-label={`Decrease quantity of ${item.name}`}\r\n                          >\r\n                            <Minus className=\"w-4 h-4\" />\r\n                          </Button>\r\n                          <span className=\"font-semibold text-base sm:text-lg min-w-[2rem] text-center\">\r\n                            {item.quantity}\r\n                          </span>\r\n                          <Button\r\n                            variant=\"outline\"\r\n                            size=\"sm\"\r\n                            onClick={() =>\r\n                              updateQuantity(\r\n                                item.id,\r\n                                item.quantity + 1,\r\n                                item.size\r\n                              )\r\n                            }\r\n                            className=\"w-8 h-8 p-0\"\r\n                            aria-label={`Increase quantity of ${item.name}`}\r\n                          >\r\n                            <Plus className=\"w-4 h-4\" />\r\n                          </Button>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div className=\"text-right mt-2\">\r\n                        <span className=\"text-base sm:text-lg font-semibold text-gray-800\">\r\n                          Subtotal: $\r\n                          {((item.salePrice || 0) * item.quantity).toFixed(2)}\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </CardContent>\r\n              </Card>\r\n            ))}\r\n          </div>\r\n\r\n          {/* Order Summary */}\r\n          <div className=\"lg:col-span-1\">\r\n            <Card className=\"sticky top-4 shadow-sm\">\r\n              <CardHeader>\r\n                <CardTitle className=\"text-lg sm:text-xl text-gray-800\">\r\n                  Order Summary\r\n                </CardTitle>\r\n              </CardHeader>\r\n              <CardContent className=\"space-y-4\">\r\n                <div className=\"flex justify-between text-sm sm:text-base\">\r\n                  <span>\r\n                    Subtotal ({getTotalItems()}{\" \"}\r\n                    {getTotalItems() === 1 ? \"item\" : \"items\"})\r\n                  </span>\r\n                  <span>${getTotalPrice().toFixed(2)}</span>\r\n                </div>\r\n                <div className=\"flex justify-between text-sm sm:text-base\">\r\n                  <span>Delivery Fee</span>\r\n                  <span>$2.00</span>\r\n                </div>\r\n                <hr className=\"border-gray-200\" />\r\n                <div className=\"flex justify-between text-base sm:text-lg font-bold\">\r\n                  <span>Total</span>\r\n                  <span>${(getTotalPrice() + 2).toFixed(2)}</span>\r\n                </div>\r\n\r\n                <Button\r\n                  className=\"w-full bg-amber-600 hover:bg-amber-700 text-white py-2 sm:py-3 text-sm sm:text-lg font-semibold mt-6\"\r\n                  onClick={handleSubmit}\r\n                  disabled={items.length === 0}\r\n                >\r\n                  Place Order\r\n                </Button>\r\n                <Button\r\n                  variant=\"outline\"\r\n                  className=\"w-full mt-3 text-sm sm:text-base\"\r\n                  asChild\r\n                >\r\n                  <Link href=\"/\">Continue Shopping</Link>\r\n                </Button>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n        </div>\r\n      </main>\r\n\r\n      <style jsx>{`\r\n        @keyframes slide-in {\r\n          from {\r\n            transform: translateX(100%);\r\n            opacity: 0;\r\n          }\r\n          to {\r\n            transform: translateX(0);\r\n            opacity: 1;\r\n          }\r\n        }\r\n        .animate-slide-in {\r\n          animation: slide-in 0.3s ease-out;\r\n        }\r\n      `}</style>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}